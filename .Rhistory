data <- data.frame(strain=NA, timepoint=NA, assay=NA, prop_on=NA)
for (pattern in patterns){
all_files <- list.files(path = dir_path, pattern = glob2rx(pattern),
full.names = T, recursive = T, include.dirs = T)
fs <- read.flowSet(all_files)
for (i in 1:length(all_files)){
ff <- fs[[i]]
#     trimmed_flow_frame <- ff
#     for (marker in c("FSC-H", "SSC-H")) {
#       trimmed_flow_frame <- Subset(trimmed_flow_frame, as.logical(exprs(trimmed_flow_frame[, marker]) > 0.0))
#     }
#
#     # log10 transform the values
#     log10_flow_frame <- transform(trimmed_flow_frame,
#                                   transformList(colnames(trimmed_flow_frame), log10))
#
#     ssc_flow_frame <- Subset(log10_flow_frame, as.logical(exprs(log10_flow_frame[, "SSC-H"]) > 3))
# off_count <- sum(exprs(ssc_flow_frame[, "BL1-H"]) <= 4)
on_count <- sum(exprs(ff[, "BL1-H"]) > 4)
parts <- strsplit(basename(all_files[i]), "_")[[1]]
assay    <- gsub(".fcs", "", parts[3])
timepoint <- parts[1]
strain     <- parts[2]
prop_on <- on_count / nrow(ff)
new_row <- list(strain, timepoint, assay, prop_on)
data <- rbind(data, new_row)
}
}
data <- na.omit(data)
data$assay <- factor(data$assay, levels = c("100", "75", "50", "25"))
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay)
# scale_x_discrete(limits=c("OXB20", "MCC", "CVA", "ECN"))
#
#
#
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA"))
data1 <- data[data$timepoint==1,]
data2 <- data[data$timepoint==2,]
data1$prop2 <- data2$prop_on
new_data <- data.frame(strain= data1$strain, assay=data1$assay, change=data2$prop_on - data1$prop_on)
new_data$normed <- new_data$change / data1$prop_on
ggplot(data=new_data, aes(x=strain, y=normed)) +
geom_bar(stat="identity") +
facet_wrap(~assay) +
ylim(c(-1, 1)) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA"))
ggplot(data1, aes(x=prop_on, y=prop2, colour=strain, shape=strain)) +
geom_point(size=3) +
# geom_smooth() +
geom_abline(intercept = 0) +
xlim(c(0,1)) +
ylim(c(0,1)) +
scale_colour_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA")) +
scale_shape_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA"))
View(data)
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay)
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
library(flowCore)
library(flowViz)
library(ggplot2)
dir_path <- "D:/UCL Data/FACS_data/TA-bact"
patterns <- c("1_OXB_*.fcs", "0_OXB_*.fcs", "1_HS_*.fcs", "0_HS_*.fcs", "1_AT_*.fcs", "0_AT_*.fcs", "1_MCC_*.fcs", "0_MCC_*.fcs", "1_CVA_*.fcs", "0_CVA_*.fcs")
data <- data.frame(strain=NA, timepoint=NA, assay=NA, prop_on=NA)
for (pattern in patterns){
all_files <- list.files(path = dir_path, pattern = glob2rx(pattern),
full.names = T, recursive = T, include.dirs = T)
fs <- read.flowSet(all_files)
for (i in 1:length(all_files)){
ff <- fs[[i]]
#     trimmed_flow_frame <- ff
#     for (marker in c("FSC-H", "SSC-H")) {
#       trimmed_flow_frame <- Subset(trimmed_flow_frame, as.logical(exprs(trimmed_flow_frame[, marker]) > 0.0))
#     }
#
#     # log10 transform the values
#     log10_flow_frame <- transform(trimmed_flow_frame,
#                                   transformList(colnames(trimmed_flow_frame), log10))
#
#     ssc_flow_frame <- Subset(log10_flow_frame, as.logical(exprs(log10_flow_frame[, "SSC-H"]) > 3))
# off_count <- sum(exprs(ssc_flow_frame[, "BL1-H"]) <= 4)
on_count <- sum(exprs(ff[, "BL1-H"]) > 4)
parts <- strsplit(basename(all_files[i]), "_")[[1]]
assay    <- gsub(".fcs", "", parts[3])
timepoint <- parts[1]
strain     <- parts[2]
prop_on <- on_count / nrow(ff)
new_row <- list(strain, timepoint, assay, prop_on)
data <- rbind(data, new_row)
}
}
data <- na.omit(data)
data$assay <- factor(data$assay, levels = c("100", "75", "50", "25"))
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay)
# scale_x_discrete(limits=c("OXB20", "MCC", "CVA", "ECN"))
#
#
#
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
data1 <- data[data$timepoint==0,]
data2 <- data[data$timepoint==1,]
data1$prop2 <- data2$prop_on
new_data <- data.frame(strain= data1$strain, assay=data1$assay, change=data2$prop_on - data1$prop_on)
new_data$normed <- new_data$change / data1$prop_on
ggplot(data=new_data, aes(x=strain, y=normed)) +
geom_bar(stat="identity") +
facet_wrap(~assay) +
ylim(c(-1, 1)) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
ggplot(data1, aes(x=prop_on, y=prop2, colour=strain, shape=strain)) +
geom_point(size=3) +
# geom_smooth() +
geom_abline(intercept = 0) +
xlim(c(0,1)) +
ylim(c(0,1)) +
scale_colour_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA")) +
scale_shape_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge(), alpha=0.2) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay)
View(data)
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge(), alpha=0.2) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
data0 <- data[data$timepoint==0,]
data1 <- data[data$timepoint==1,]
data0$prop2 <- data1$prop_on
for(st in levels(data0$strain))){
print(st)
}
for(st in levels(data0$strain)){
print(st)
}
for(st in levels(data0$strain)){
print(st)
}
levels(data0$strain)
for(row in 1:nrow(data1)){
print(row)
}
data1(10)
data1[1]
data1[,1]
data1[1,]
data1[1,"strain"]
data0[,data0$strain == data1[1,"strain"]]$prop_on
data0[,data0$strain == data1[1,"strain"]]
data1[1,strain]
data1[1,"strain"]
data0[,"strain" == data1[1,"strain"]]
data0$strain == data1[1,"strain"]]
data0$strain == data1[1,"strain"]
data0[data0$strain == data1[1,"strain"]]
data0[data0$strain == data1[1,"strain"],]
for(row in 1:nrow(data1)){
temp1 <- data0[data0$strain == data1[row,"strain"],]
data1$prop0 <- temp1[temp1$assay == data1[row,"assay"],]$prop_on
}
View(data1)
row <- 1
temp1 <- data0[data0$strain == data1[row,"strain"],]
View(temp1)
temp1[temp1$assay == data1[row,"assay"],]$prop_on
for(row in 1:nrow(data1)){
temp1 <- data0[data0$strain == data1[row,"strain"],]
data1[row,]$prop0 <- temp1[temp1$assay == data1[row,"assay"],]$prop_on
}
View(data1)
ggplot(data1, aes(x=prop0, y=prop_on, colour=strain, shape=strain)) +
geom_point(size=3) +
# geom_smooth() +
geom_abline(intercept = 0) +
xlim(c(0,1)) +
ylim(c(0,1)) +
scale_colour_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA")) +
scale_shape_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA"))
ggplot(data1, aes(x=prop0, y=prop_on, colour=strain, shape=strain)) +
geom_point(size=3) +
# geom_smooth() +
geom_abline(intercept = 0) +
xlim(c(0,1)) +
ylim(c(0,1)) +
scale_colour_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA")) +
scale_shape_discrete(limits=c("OXB", "HS", "AT", "MCC", "CVA")) +
xlab("Proportion plasmid-bearing at time 0") +
ylab("Proportion plasmid-bearing after 24 hours")
library(flowCore)
library(flowViz)
library(ggplot2)
# dir_path <- "R:/Alex/FACS/bact_test_090616/"
dir_path <- "D:/UCL Data/FACS_data/PSK_test"
# patterns <- c("*ECN.fcs", "*CVA.fcs", "*OXB20.fcs", "*MCC.fcs")
# patterns <- c("*CVA*.fcs", "*OXB*.fcs", "*MCC*.fcs")
patterns <- c("1_OXB_*.fcs", "2_OXB_*.fcs", "1_HS_*.fcs", "2_HS_*.fcs", "1_EZ_*.fcs", "2_EZ_*.fcs", "1_AT_*.fcs", "2_AT_*.fcs", "1_MCC_*.fcs", "2_MCC_*.fcs", "1_CVA_*.fcs", "2_CVA_*.fcs")
data <- data.frame(strain=NA, timepoint=NA, assay=NA, prop_on=NA)
for (pattern in patterns){
all_files <- list.files(path = dir_path, pattern = glob2rx(pattern),
full.names = T, recursive = T, include.dirs = T)
fs <- read.flowSet(all_files)
for (i in 1:length(all_files)){
ff <- fs[[i]]
trimmed_flow_frame <- ff
for (marker in c("FSC-H", "SSC-H")) {
trimmed_flow_frame <- Subset(trimmed_flow_frame, as.logical(exprs(trimmed_flow_frame[, marker]) > 0.0))
}
# log10 transform the values
log10_flow_frame <- transform(trimmed_flow_frame,
transformList(colnames(trimmed_flow_frame), log10))
ssc_flow_frame <- Subset(log10_flow_frame, as.logical(exprs(log10_flow_frame[, "SSC-H"]) > 3))
# off_count <- sum(exprs(ssc_flow_frame[, "BL1-H"]) <= 4)
on_count <- sum(exprs(ssc_flow_frame[, "BL1-H"]) > 4)
parts <- strsplit(basename(all_files[i]), "_")[[1]]
assay    <- gsub(".fcs", "", parts[3])
timepoint <- parts[1]
strain     <- parts[2]
prop_on <- on_count / nrow(ssc_flow_frame)
new_row <- list(strain, timepoint, assay, prop_on)
data <- rbind(data, new_row)
}
}
data <- na.omit(data)
data$assay <- factor(data$assay, levels = c("100", "85", "70", "55", "40", "25"))
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay)
# scale_x_discrete(limits=c("OXB20", "MCC", "CVA", "ECN"))
#
#
#
ggplot(data=data, aes(x=strain, y=prop_on, fill=timepoint))+
geom_bar(stat="identity", position = position_dodge()) +
ylab("Proportion plasmid-bearing") +
facet_wrap(~assay) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA"))
data1 <- data[data$timepoint==1,]
data2 <- data[data$timepoint==2,]
data1$prop2 <- data2$prop_on
new_data <- data.frame(strain= data1$strain, assay=data1$assay, change=data2$prop_on - data1$prop_on)
new_data$normed <- new_data$change / data1$prop_on
ggplot(data=new_data, aes(x=strain, y=normed)) +
geom_bar(stat="identity") +
facet_wrap(~assay) +
ylim(c(-1, 1)) +
scale_x_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA"))
ggplot(data1, aes(x=prop_on, y=prop2, colour=strain, shape=strain)) +
geom_point(size=3) +
# geom_smooth() +
geom_abline(intercept = 0) +
xlim(c(0,1)) +
ylim(c(0,1)) +
scale_colour_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA")) +
scale_shape_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA"))
ggplot(data1, aes(x=prop_on, y=prop2, colour=strain, shape=strain)) +
geom_point(size=3) +
# geom_smooth() +
geom_abline(intercept = 0) +
xlim(c(0,1)) +
ylim(c(0,1)) +
scale_colour_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA")) +
scale_shape_discrete(limits=c("OXB", "HS", "AT", "EZ", "MCC", "CVA")) +
xlab("Proportion plasmid-bearing at time 0") +
ylab("Proportion plasmid-bearing after 24 hours")
library(gtools)
library(ggplot2)
library(flowCore)
library(fluoroClust)
dir_path <- "D:/UCL Data/FACS_data/SPoCK_211016_trimmed/"
# patterns <- c("Para-BFP_*_?.fcs","Plux-GFP_*_?.fcs","Ptet-mCherry_*_?.fcs")
# strains <- c("Para-BFP", "Plux-GFP", "Ptet-mCherry")
flow.data <- data.frame()
files <- list.files(path=dir_path, pattern = glob2rx("*.fcs"))
for(i in 1:length(files)){
fF <- read.FCS(paste(dir_path, files[i], sep=""))
name <- unlist(strsplit(files[i], "[.]"))[1]
rep.set <- unlist(strsplit(name, "[_]"))
new.row <- data.frame(promoter=NA, ind_conc=NA, replicate=NA, laser=NA, median=NA, mean=NA)
new.row$promoter <- rep.set[1]
new.row$ind_conc <- rep.set[2]
new.row$replicate <- rep.set[3]
new.row$laser <- "VL1-H"
new.row$median <- median(fF@exprs[,"VL1-H"])
new.row$mean <- mean(fF@exprs[is.finite(fF@exprs[,"VL1-H"]), "VL1-H"])
flow.data <- rbind(flow.data, new.row)
new.row$laser <- "YL2-H"
new.row$median <- median(fF@exprs[,"YL2-H"])
new.row$mean <- mean(fF@exprs[is.finite(fF@exprs[,"YL2-H"]), "YL2-H"])
flow.data <- rbind(flow.data, new.row)
new.row$laser <- "BL1-H"
new.row$median <- median(fF@exprs[,"BL1-H"])
new.row$mean <- mean(fF@exprs[is.finite(fF@exprs[,"BL1-H"]), "BL1-H"])
flow.data <- rbind(flow.data, new.row)
}
flow.data <- within(flow.data, laser <- factor(laser, levels=c("VL1-H", "BL1-H", "YL2-H")))
ggplot(data=flow.data, aes(x=ind_conc, y=mean, colour=promoter)) +
geom_point(size=4, alpha=0.2) +
scale_x_discrete("Relative Inducer Concentration") +
scale_y_continuous("Mean log10 Fluorescence") +
scale_color_discrete("Promoter-Fluorophore") +
facet_wrap(~laser, ncol = 2)
t <- 0:20
t <- 0:20
x1 <- 2 ^ t
x2 <- 2 ^ (0.5 * t)
ggplot() +
geom_line(aes(x=t, y=x1)) +
geom_line(aes(x=t, y=x2))
x2 <- 2 ^ (0.9 * t)
ggplot() +
geom_line(aes(x=t, y=x1)) +
geom_line(aes(x=t, y=x2))
ggplot() +
geom_line(aes(x=t, y=log10(x1))) +
geom_line(aes(x=t, y=log10(x2)))
x1 <- 2 ^ t
x2 <- 2 ^ (0.5 * t)
ggplot() +
geom_line(aes(x=t, y=log10(x1))) +
geom_line(aes(x=t, y=log10(x2)))
ggplot() +
geom_line(aes(x=t, y=log10(x1))) +
geom_line(aes(x=t, y=log10(x2))) +
ylab("Time") +
xlab("Population size")
data <- data.frame(t, x1, x2)
ggplot(data, aes(x=t)) +
geom_line(aes(y=log10(x1))) +
geom_line(aes(y=log10(x2))) +
ylab("Time") +
xlab("Population size")
data <- melt(data)
library(reshape)
data <- melt(data)
library(reshape)
t <- 0:20
x1 <- 2 ^ t
x2 <- 2 ^ (0.5 * t)
data <- data.frame(t, x1, x2)
data <- melt(data, c("t"))
ggplot(data, aes(x=t, y=value, group=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size")
ggplot(data, aes(x=t, y=log10(value), group=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size")
ggplot(data, aes(x=t, y=log10(value)), group=variable) +
geom_line() +
xlab("Time") +
ylab("Population size")
ggplot(data, aes(x=t, y=log10(value), group=variable, colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size")
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size")
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete(labels = c("T=1", "T=0.5"))
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete(labels = c("T=1", "T=2"))
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2"))
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_classic()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_bw()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_classic()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_linedraw()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line() +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=5) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=2) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=1) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=1) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal(text=element_text(size=20)) +
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=1) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal() +
theme(text=element_text(size=20))
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=1) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal()
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=1) +
xlab("Time") +
ylab("Population size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal() +
theme(text=element_text(size=20))
ggplot(data, aes(x=t, y=log10(value), colour=variable)) +
geom_line(size=1) +
xlab("Time") +
ylab("Log10 Population Size") +
scale_colour_discrete("Doubling time", labels = c("T=1", "T=2")) +
theme_minimal() +
theme(text=element_text(size=20))
library(flowCore)
library(flowViz)
library(ggplot2)
dir_path <- "D:/UCL Data/FACS_data/TA-bact"
patterns <- c("1_OXB_*.fcs", "0_OXB_*.fcs", "1_HS_*.fcs", "0_HS_*.fcs", "1_AT_*.fcs", "0_AT_*.fcs", "1_MCC_*.fcs", "0_MCC_*.fcs", "1_CVA_*.fcs", "0_CVA_*.fcs")
data <- data.frame(strain=NA, timepoint=NA, assay=NA, prop_on=NA)
for (pattern in patterns){
all_files <- list.files(path = dir_path, pattern = glob2rx(pattern),
full.names = T, recursive = T, include.dirs = T)
fs <- read.flowSet(all_files)
for (i in 1:length(all_files)){
ff <- fs[[i]]
on_count <- sum(exprs(ff[, "BL1-H"]) > 4)
parts <- strsplit(basename(all_files[i]), "_")[[1]]
assay    <- gsub(".fcs", "", parts[3])
timepoint <- parts[1]
strain     <- parts[2]
prop_on <- on_count / nrow(ff)
new_row <- list(strain, timepoint, assay, prop_on)
data <- rbind(data, new_row)
}
}
data <- na.omit(data)
data$assay <- factor(data$assay, levels = c("100", "75", "50", "25"))
View(data)
View(data)
write.csv(data, file="C:/Users/sandy/Desktop/psk_change.csv")
library(autoGate)
trim.fcs("R:/Alex/FACS/PSK-4_2", do_plot = T)
